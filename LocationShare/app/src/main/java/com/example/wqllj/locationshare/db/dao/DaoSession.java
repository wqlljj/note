package com.example.wqllj.locationshare.db.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.wqllj.locationshare.db.bean.CoordinatePointBean;
import com.example.wqllj.locationshare.db.bean.EventBean;
import com.example.wqllj.locationshare.db.bean.PersonBean;
import com.example.wqllj.locationshare.db.bean.RouteLineBean;

import com.example.wqllj.locationshare.db.dao.CoordinatePointBeanDao;
import com.example.wqllj.locationshare.db.dao.EventBeanDao;
import com.example.wqllj.locationshare.db.dao.PersonBeanDao;
import com.example.wqllj.locationshare.db.dao.RouteLineBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig coordinatePointBeanDaoConfig;
    private final DaoConfig eventBeanDaoConfig;
    private final DaoConfig personBeanDaoConfig;
    private final DaoConfig routeLineBeanDaoConfig;

    private final CoordinatePointBeanDao coordinatePointBeanDao;
    private final EventBeanDao eventBeanDao;
    private final PersonBeanDao personBeanDao;
    private final RouteLineBeanDao routeLineBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        coordinatePointBeanDaoConfig = daoConfigMap.get(CoordinatePointBeanDao.class).clone();
        coordinatePointBeanDaoConfig.initIdentityScope(type);

        eventBeanDaoConfig = daoConfigMap.get(EventBeanDao.class).clone();
        eventBeanDaoConfig.initIdentityScope(type);

        personBeanDaoConfig = daoConfigMap.get(PersonBeanDao.class).clone();
        personBeanDaoConfig.initIdentityScope(type);

        routeLineBeanDaoConfig = daoConfigMap.get(RouteLineBeanDao.class).clone();
        routeLineBeanDaoConfig.initIdentityScope(type);

        coordinatePointBeanDao = new CoordinatePointBeanDao(coordinatePointBeanDaoConfig, this);
        eventBeanDao = new EventBeanDao(eventBeanDaoConfig, this);
        personBeanDao = new PersonBeanDao(personBeanDaoConfig, this);
        routeLineBeanDao = new RouteLineBeanDao(routeLineBeanDaoConfig, this);

        registerDao(CoordinatePointBean.class, coordinatePointBeanDao);
        registerDao(EventBean.class, eventBeanDao);
        registerDao(PersonBean.class, personBeanDao);
        registerDao(RouteLineBean.class, routeLineBeanDao);
    }
    
    public void clear() {
        coordinatePointBeanDaoConfig.clearIdentityScope();
        eventBeanDaoConfig.clearIdentityScope();
        personBeanDaoConfig.clearIdentityScope();
        routeLineBeanDaoConfig.clearIdentityScope();
    }

    public CoordinatePointBeanDao getCoordinatePointBeanDao() {
        return coordinatePointBeanDao;
    }

    public EventBeanDao getEventBeanDao() {
        return eventBeanDao;
    }

    public PersonBeanDao getPersonBeanDao() {
        return personBeanDao;
    }

    public RouteLineBeanDao getRouteLineBeanDao() {
        return routeLineBeanDao;
    }

}
